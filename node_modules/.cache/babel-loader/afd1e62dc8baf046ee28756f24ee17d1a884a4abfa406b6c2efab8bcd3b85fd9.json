{"ast":null,"code":"const initialState = {\n  items: [],\n  itemCount: 0\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const newItem = action.payload;\n      const index = state.items.findIndex(item => item.id === newItem.id);\n      let updatedItems;\n      if (index > -1) {\n        updatedItems = [...state.items];\n        updatedItems[index].quantity += newItem.quantity;\n      } else {\n        updatedItems = [...state.items, newItem];\n      }\n      return {\n        ...state,\n        items: updatedItems,\n        itemCount: updatedItems.reduce((count, item) => count + item.quantity, 0)\n      };\n    case 'REMOVE_FROM_CART':\n      const itemId = action.payload;\n      const filteredItems = state.items.filter(item => item.id !== itemId);\n      return {\n        ...state,\n        items: filteredItems,\n        itemCount: filteredItems.reduce((count, item) => count + item.quantity, 0)\n      };\n    case 'UPDATE_QUANTITY':\n      const newItemUpdate = action.payload;\n      const updatedQuantityItems = state.items.map(item => item.id === newItemUpdate.id ? {\n        ...item,\n        quantity: newItemUpdate.quantity\n      } : item).filter(item => item.quantity > 0); // Remove items with zero quantity\n      return {\n        ...state,\n        items: updatedQuantityItems,\n        itemCount: updatedQuantityItems.reduce((count, item) => count + item.quantity, 0)\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initialState","items","itemCount","cartReducer","state","action","type","newItem","payload","index","findIndex","item","id","updatedItems","quantity","reduce","count","itemId","filteredItems","filter","newItemUpdate","updatedQuantityItems","map"],"sources":["/home/hp/Downloads/lastupdate/src/store/Reducer/cartReducer.js"],"sourcesContent":["const initialState = {\n    items: [],      \n    itemCount: 0    \n};\n\nconst cartReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_TO_CART':\n            const newItem = action.payload;\n            const index = state.items.findIndex(item => item.id === newItem.id);\n            let updatedItems;\n            if (index > -1) {\n                updatedItems = [...state.items];\n                updatedItems[index].quantity += newItem.quantity;\n            } else {\n                updatedItems = [...state.items, newItem];\n            }\n            return {\n                ...state,\n                items: updatedItems,\n                itemCount: updatedItems.reduce((count, item) => count + item.quantity, 0)\n            };\n\n        case 'REMOVE_FROM_CART':\n            const itemId = action.payload;\n            const filteredItems = state.items.filter(item => item.id !== itemId);\n            return {\n                ...state,\n                items: filteredItems,\n                itemCount: filteredItems.reduce((count, item) => count + item.quantity, 0)\n            };\n\n        case 'UPDATE_QUANTITY':\n            const newItemUpdate = action.payload;\n            const updatedQuantityItems = state.items.map(item =>\n                item.id === newItemUpdate.id\n                    ? { ...item, quantity: newItemUpdate.quantity }\n                    : item\n            ).filter(item => item.quantity > 0);  // Remove items with zero quantity\n            return {\n                ...state,\n                items: updatedQuantityItems,\n                itemCount: updatedQuantityItems.reduce((count, item) => count + item.quantity, 0)\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default cartReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,MAAMC,OAAO,GAAGF,MAAM,CAACG,OAAO;MAC9B,MAAMC,KAAK,GAAGL,KAAK,CAACH,KAAK,CAACS,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACnE,IAAIC,YAAY;MAChB,IAAIJ,KAAK,GAAG,CAAC,CAAC,EAAE;QACZI,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAK,CAAC;QAC/BY,YAAY,CAACJ,KAAK,CAAC,CAACK,QAAQ,IAAIP,OAAO,CAACO,QAAQ;MACpD,CAAC,MAAM;QACHD,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAK,EAAEM,OAAO,CAAC;MAC5C;MACA,OAAO;QACH,GAAGH,KAAK;QACRH,KAAK,EAAEY,YAAY;QACnBX,SAAS,EAAEW,YAAY,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGL,IAAI,CAACG,QAAQ,EAAE,CAAC;MAC5E,CAAC;IAEL,KAAK,kBAAkB;MACnB,MAAMG,MAAM,GAAGZ,MAAM,CAACG,OAAO;MAC7B,MAAMU,aAAa,GAAGd,KAAK,CAACH,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKK,MAAM,CAAC;MACpE,OAAO;QACH,GAAGb,KAAK;QACRH,KAAK,EAAEiB,aAAa;QACpBhB,SAAS,EAAEgB,aAAa,CAACH,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGL,IAAI,CAACG,QAAQ,EAAE,CAAC;MAC7E,CAAC;IAEL,KAAK,iBAAiB;MAClB,MAAMM,aAAa,GAAGf,MAAM,CAACG,OAAO;MACpC,MAAMa,oBAAoB,GAAGjB,KAAK,CAACH,KAAK,CAACqB,GAAG,CAACX,IAAI,IAC7CA,IAAI,CAACC,EAAE,KAAKQ,aAAa,CAACR,EAAE,GACtB;QAAE,GAAGD,IAAI;QAAEG,QAAQ,EAAEM,aAAa,CAACN;MAAS,CAAC,GAC7CH,IACV,CAAC,CAACQ,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAE;MACtC,OAAO;QACH,GAAGV,KAAK;QACRH,KAAK,EAAEoB,oBAAoB;QAC3BnB,SAAS,EAAEmB,oBAAoB,CAACN,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGL,IAAI,CAACG,QAAQ,EAAE,CAAC;MACpF,CAAC;IAEL;MACI,OAAOV,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}